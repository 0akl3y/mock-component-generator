{"file":"/Users/johanneseichler/Developer/MockGenerator/mockGenerator/src/generateMocks.ts","mappings":";;;AAAA,wCAAuC;AAGvC,MAAM,IAAI,GAAG;;EAEX,CAAC;AAEU,QAAA,YAAY,GAAG,GAAG,EAAE;IAC/B,MAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;IAC9B,OAAO,GAAG,CAAA;AACZ,CAAC,CAAA;AAED,kBAAkB;AAClB,kBAAkB;AAClB,8CAA8C;AAC9C,8BAA8B;AAC9B,QAAQ;AACR,MAAM;AACN,MAAM","names":[],"sources":["/Users/johanneseichler/Developer/MockGenerator/mockGenerator/src/generateMocks.ts"],"sourcesContent":["import * as parser from \"@babel/parser\"\nimport traverse from \"@babel/traverse\"\n\nconst code = `function square(n) {\n  return n * n\n}`;\n\nexport const parseExample = () => {\n  const ast = parser.parse(code)\n  return ast\n}\n\n// traverse(ast, {\n//   enter(path) {\n//     if (path.isIdentifier({ name: \"n\" })) {\n//       path.node.name = \"x\";\n//     }\n//   }\n// });"],"version":3}